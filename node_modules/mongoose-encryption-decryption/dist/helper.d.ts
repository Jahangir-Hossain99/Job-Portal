/// <reference types="node" />
import * as crypto from 'crypto';
export declare class Helper {
    static saltGenerator: () => Buffer;
    static hashPrivateKey: (privateKey: string) => string;
    static encrypt: (plainTxt: string, secretKey: crypto.CipherKey) => string;
    static encryptNestedFields: (data: {
        [x: string]: any;
    }, fields: string[], secretKey: crypto.CipherKey) => void;
    static decrypt: (encryptedTxt: string, secretKey: crypto.CipherKey) => string;
    static decryptNestedFields: (data: {
        [x: string]: any;
    }, fields: string[], secretKey: crypto.CipherKey) => void;
    static decryptArrayFields: (data: any[], fields: string[], secretKey: crypto.CipherKey) => void;
    static getNextFunction: (next: any, data?: any) => any;
    static getData: (next: any, data: any) => any;
    static getNextAndData: (_next: any, _data: any) => any;
}
